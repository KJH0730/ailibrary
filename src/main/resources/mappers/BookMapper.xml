<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lib.ailibrary.domain.book.BookMapper">

    <!-- tb_book 테이블 전체 컬럼 -->
    <sql id="bookColumns">
        book_id
        , book_title
        , author
        , published_date
        , publisher
        , category
        , floor
        , book_good
        , book_date
        , book_image
        , review_summary
    </sql>

    <!-- 도서 검색 정보 조회 -->
    <select id="findByTitle" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        book_title = #{value}
    </select>

    <!-- 신착 도서 조회 -->
    <select id="findNew" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        ORDER BY
        book_date DESC
        LIMIT 10
    </select>

    <!-- 인기 도서 조회 -->
    <select id="findGood" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 소설 조회 -->
    <select id="findGenreFiction" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
            <include refid="bookColumns"></include>
        FROM
            tb_book
        WHERE
            category = '소설'
        ORDER BY
            book_good DESC
            LIMIT 10
    </select>

    <!-- 자기계발서 조회 -->
    <select id="findGenreDevelopment" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
            <include refid="bookColumns"></include>
        FROM
            tb_book
        WHERE
            category = '자기계발'
        ORDER BY
            book_good DESC
            LIMIT 10
    </select>

    <!-- 과학도서 조회 -->
    <select id="findGenreScience" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        category = '과학'
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 컴퓨터책 조회 -->
    <select id="findGenreComputer" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        category = '컴퓨터'
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 에세이 조회 -->
    <select id="findGenreEssay" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        category = '에세이'
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 경제도서 조회 -->
    <select id="findGenreEconomy" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        category = '경제'
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 인물도서 조회 -->
    <select id="findGenreBiographical" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        category = '인물'
        ORDER BY
        book_good DESC
        LIMIT 10
    </select>

    <!-- 전체 도서 조회 -->
    <select id="findAll" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        ORDER BY
        book_id DESC
    </select>

    <!-- id별 도서 조회 -->
    <select id="findById" parameterType="int" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
        <include refid="bookColumns"></include>
        FROM
        tb_book
        WHERE
        book_id = #{value}
    </select>

    <!-- 키워드로 도서 검색 -->
    <select id="find" parameterType="String" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
            <include refid="bookColumns"></include>
        FROM
            tb_book
        WHERE
            book_title LIKE CONCAT('%', #{keyword}, '%')
            OR author LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY book_good DESC
    </select>

    <!-- 도서 좋아요 기능 -->
    <update id="increaseBookGood" parameterType="int">
        UPDATE
        tb_book
        SET
        book_good = book_good + 1
        WHERE
        book_id = #{bookId}
    </update>

    <!-- 찜 취소 기능 -->
    <update id="decreaseBookGood" parameterType="int">
        UPDATE
        tb_book
        SET
        book_good = book_good - 1
        WHERE
        book_id = #{bookId}
    </update>

    <!-- 사용자가 찜을 한 도서인지 확인 기능 -->
    <select id="checkUserLike" parameterType="map" resultType="int">
        SELECT
            COUNT(*)
        FROM
            tb_like
        WHERE
            user_id = #{userId, jdbcType=VARCHAR} AND book_id = #{bookId, jdbcType=INTEGER}
    </select>

    <!-- 찜 테이블에 찜 추가 -->
    <insert id="isLike" parameterType="map">
        INSERT INTO tb_like (
            user_id, book_id
        ) VALUES (
        #{userId, jdbcType=VARCHAR},
        #{bookId, jdbcType=INTEGER})
    </insert>

    <!-- 찜 테이블에서 삭제 -->
    <delete id="unLike" parameterType="map">
        DELETE
        FROM
            tb_like
        WHERE
            user_id = #{userId, jdbcType=VARCHAR} AND book_id = #{bookId, jdbcType=INTEGER}
    </delete>

    <!-- 사용자가 찜 한 도서 목록 조회 -->
    <select id="checkLikeBook" parameterType="string" resultType="com.lib.ailibrary.domain.book.Book">
        SELECT
            A.book_id, A.book_title, A.book_image, A.book_good
        FROM
            tb_book A
        LEFT JOIN
            tb_like B ON A.book_id = B.book_id
        WHERE
            B.user_id = #{userId}
    </select>

    <!-- 예약해놓은 도서가 반납됐을 때 도서 제목 -->
    <select id="reserveBookTitle" parameterType="int" resultType="string">
        SELECT
            book_title
        FROM
            tb_book
        WHERE
            book_id = #{bookId}
    </select>

    <select id="findReviewSummary" parameterType="int" resultType="string">
        SELECT
            review_summary
        FROM
            tb_book
        WHERE
            book_id = #{bookId}
    </select>

</mapper>